[{"/Users/sehyeon/Desktop/wanted-pre-onboarding-frontend/src/index.js":"1","/Users/sehyeon/Desktop/wanted-pre-onboarding-frontend/src/App.js":"2","/Users/sehyeon/Desktop/wanted-pre-onboarding-frontend/src/reportWebVitals.js":"3","/Users/sehyeon/Desktop/wanted-pre-onboarding-frontend/src/Page/Signup.js":"4","/Users/sehyeon/Desktop/wanted-pre-onboarding-frontend/src/Page/Signin.js":"5","/Users/sehyeon/Desktop/wanted-pre-onboarding-frontend/src/Page/Todo.js":"6"},{"size":628,"mtime":1675644582106,"results":"7","hashOfConfig":"8"},{"size":391,"mtime":1675917358264,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1675642513912,"results":"10","hashOfConfig":"8"},{"size":2142,"mtime":1675843909011,"results":"11","hashOfConfig":"8"},{"size":2204,"mtime":1675843949242,"results":"12","hashOfConfig":"8"},{"size":4907,"mtime":1675918913981,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"blom7v",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sehyeon/Desktop/wanted-pre-onboarding-frontend/src/index.js",[],[],[],"/Users/sehyeon/Desktop/wanted-pre-onboarding-frontend/src/App.js",[],[],"/Users/sehyeon/Desktop/wanted-pre-onboarding-frontend/src/reportWebVitals.js",[],[],"/Users/sehyeon/Desktop/wanted-pre-onboarding-frontend/src/Page/Signup.js",["35"],[],"import { React, useState, useEffect } from 'react'\nimport styled from 'styled-components';\nimport { useNavigate } from \"react-router-dom\";\n\nconst Signup = () => {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if(localStorage.getItem(\"access_token\")){\n      navigate(\"/todo\")\n    }\n  },[])\n\n  const handleButtonClick = () => {\n\n    const postData = {\n      email : email,\n      password : password\n    }\n\n    fetch(\"https://pre-onboarding-selection-task.shop/auth/signup\",{\n      method: \"POST\",\n      headers: {\"Content-Type\" : \"application/json\"},\n      body : JSON.stringify(postData)\n    })\n    .then((res) => {\n      if(res.status === 400){\n        console.log('실패')\n        alert(\"이미 가입된 이메일 입니다.\")\n      }else{\n        console.log('성공')\n        navigate('/signin')\n      }\n    })\n    .catch((err) => console.log(err))\n  }\n\n  const onKeyPress = (e) => {\n    if(e === \"Enter\"){\n      handleButtonClick()\n    }\n  }\n\n  return (\n    <SignupStyle>\n      <h1>회원가입</h1>\n      <input data-testid=\"email-input\" onKeyPress={e => onKeyPress(e.key)} type='email' placeholder='email' onChange={e => setEmail(e.target.value)} />\n      <input data-testid=\"password-input\" onKeyPress={e => onKeyPress(e.key)} type='password' placeholder='password' onChange={e => setPassword(e.target.value)} />\n      <button data-testid=\"signup-button\" onClick={handleButtonClick} disabled={!email.includes(\"@\") || password.length < 8 ? \"disabled\" : undefined}>회원가입</button>\n\n      {!email.includes(\"@\") && email ?\n      <p>이메일에 @ 가 포함되어야 합니다.</p> :\n      password.length < 8 && password ?\n      <p>비밀번호는 8자 이상이어야 합니다.</p> :\n      undefined}\n    </SignupStyle>\n  )\n}\n\nexport default Signup\n\nconst SignupStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 10vh;\n\n  input{\n    width: 200px;\n    font-size: 20px;\n    margin: 6px 0;\n  }\n\n  button{\n    margin-top: 5px;\n    font-size: 20px;\n  }\n`","/Users/sehyeon/Desktop/wanted-pre-onboarding-frontend/src/Page/Signin.js",["36"],[],"import { React, useState, useEffect } from 'react'\nimport styled from 'styled-components';\nimport { useNavigate } from \"react-router-dom\";\n\nconst Signin = () => {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if(localStorage.getItem(\"access_token\")){\n      navigate(\"/todo\")\n    }\n  },[])\n\n  const handleButtonClick = () => {\n\n    const postData = {\n      email : email,\n      password : password\n    }\n\n    fetch(\"https://pre-onboarding-selection-task.shop/auth/signin\",{\n      method : \"POST\",\n      headers: {\"Content-Type\" : \"application/json\"},\n      body : JSON.stringify(postData)\n    })\n    .then(res => res.json())\n    .then(res => {\n      if(res.access_token){\n        localStorage.setItem(\"access_token\" , res.access_token)\n        console.log(\"성공\")\n        navigate(\"/todo\")\n      }else{\n        alert(\"이메일 또는 비밀번호가 틀렸습니다.\")\n      }\n    })\n    .catch(err => console.log(err))\n  }\n\n  const onKeyPress = (e) => {\n    if(e === \"Enter\"){\n      handleButtonClick()\n    }\n  }\n\n  return (\n    <SigninStyle>\n      <h1>로그인</h1>\n      <input onKeyPress={e => onKeyPress(e.key)} data-testid=\"email-input\" type='email' placeholder='email' onChange={e => setEmail(e.target.value)} />\n      <input onKeyPress={e => onKeyPress(e.key)} data-testid=\"password-input\" type='password' placeholder='password' onChange={e => setPassword(e.target.value)} />\n      <button data-testid=\"signin-button\" onClick={handleButtonClick} disabled={!email.includes(\"@\") || password.length < 8 ? \"disabled\" : undefined}>로그인</button>\n\n      {!email.includes(\"@\") && email ?\n      <p>이메일에 @ 가 포함되어야 합니다.</p> :\n      password.length < 8 && password ?\n      <p>비밀번호는 8자 이상이어야 합니다.</p> :\n      undefined}\n    </SigninStyle>\n  )\n}\n\nexport default Signin\n\nconst SigninStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 10vh;\n\n  input{\n    width: 200px;\n    font-size: 20px;\n    margin: 6px 0;\n  }\n\n  button{\n    margin-top: 5px;\n    font-size: 20px;\n  }\n`","/Users/sehyeon/Desktop/wanted-pre-onboarding-frontend/src/Page/Todo.js",["37"],[],{"ruleId":"38","severity":1,"message":"39","line":16,"column":5,"nodeType":"40","endLine":16,"endColumn":7,"suggestions":"41"},{"ruleId":"38","severity":1,"message":"39","line":16,"column":5,"nodeType":"40","endLine":16,"endColumn":7,"suggestions":"42"},{"ruleId":"38","severity":1,"message":"39","line":34,"column":5,"nodeType":"40","endLine":34,"endColumn":16,"suggestions":"43"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["44"],["45"],["46"],{"desc":"47","fix":"48"},{"desc":"47","fix":"49"},{"desc":"50","fix":"51"},"Update the dependencies array to be: [navigate]",{"range":"52","text":"53"},{"range":"54","text":"53"},"Update the dependencies array to be: [condition, navigate]",{"range":"55","text":"56"},[388,390],"[navigate]",[388,390],[888,899],"[condition, navigate]"]